[uwsgi]

# 配置前导路径
; base = /root/bin/django-RESTfulAPI
# 配置项目名称
name = base_django_api
# 守护进程
master = true
# 进程个数
processes = 4
# 线程个数
threads = 2
# 配置gevent的并发。线上建议：gevent设置500 process设置4-8。例如：process=4 gevent=500，那么最大并发数为：4 * 500 = 2000
; gevent = 500
# 在不修改任何代码的情况下，使用猴子补丁，使django服务可以以协程并发的形式运行
; gevent-monkey-patch = true
# 这是uwsgi监听队列的长度，默认较小，当需要大的并发时需要增加该值。需要配合Linux系统内核的配置net.core.somaxconn，也就是listen的值不能大于Linux系统设置的net.core.somaxconn值
# 可以配置Linux系统net.core.somaxconn = 10240。然后可以配置uwsgi listen = 10240
; listen = 10240
# 通信的地址和端口(自己服务器的IP地址和端口) 同时监听socket和http 同时监听socket和http会导致没法使用nginx反向代理 全部放在server.sh内指定
; http-socket = 127.0.0.1:8001
; socket = 127.0.0.1:8001
# 绑定http的端口
; http = 0.0.0.0:8002
# wsgi-file文件地址
; wsgi-file = %(base)/%(name)/wsgi.py
# 项目地址
; chdir = %(base)
# 虚拟环境 docker环境中不指定虚拟环境和pythonpath，因为docker本身就是一个环境
; home = /root/.envs/%(name)
# 指定python解释器，部分系统需要指定到 site-packages 目录才可以正常运行
; pythonpath = %(home)/bin/python
# 日志文件地址，没有指定日志地址时，启动时会在前台启动。指定日志时在后台启动
daemonize = ./logs/%(name).log